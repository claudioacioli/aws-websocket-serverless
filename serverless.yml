service: serverless-chat

plugin:
  - serverless-python-requirements

custom:
  pythonRequirements:
    dockerizePip: true
    noDeploy: []

provider:
  name: aws
  runtime: python3.7
  stage: ${opt:stage, 'dev'}
  region: 'us-east-1'
  websocketApiName: serverless-chat-api
  websocketApiRouteSelectionExpression: $request.body.action
  environment:
    CONNECTIONS_TABLE: serverless-chat_Connections
    MESSAGES_TABLE: serverless-chat_Messages
    WEBSOCKET_API_ENDPOINT: !Join ['', ['https://', !Ref WebsocketsApi, '.execute-api.', "${self:provider.region}", '.amazonaws.com/', "${self:provider.stage}/"]]
  iamRoleStatements:
    - Effect: Allow
      Action:
        - "execute-api:*"
      Resource:
        - "arn:aws:execute-api:*:*:**/@connections/*"
    - Effect: Allow
      Action:
        - "dynamodb:PutItem"
        - "dynamodb:GetItem"
        - "dynamodb:UpdateItem"
        - "dynamodb:DeleteItem"
        - "dynamodb:BatchGetItem"
        - "dynamodb:BatchWriteItem"
        - "dynamodb:Scan"
        - "dynamodb:Query"
      Resource:
        - "arn:aws:dynamodb:us-east-1:*:*"

functions:
  connectionManager:
    handler: handler.connection_manager
    events:
      - websocket:
          route: $connect
      - websocket:
          route: $disconnect
  ping:
    handler: handler.ping
    events:
      - http:
          path: ping
          method: get
  
  sendMessage:
    handler: handler.send_message
    events:
      - http:
          path: send
          method: get
      - websocket:
          route: sendMessage

resources:
  Resources:

    ConnectionsDynamoDBTable:
      Type: AWS::DynamoDB::Table
      Properties:
        AttributeDefinitions:
          - AttributeName: ConnectionId
            AttributeType: S
        KeySchema:
          - AttributeName: ConnectionId
            KeyType: HASH
        BillingMode: PAY_PER_REQUEST
        TableName: ${self:provider.environment.CONNECTIONS_TABLE}

    MessagesDynamoDBTable:
      Type: AWS::DynamoDB::Table
      Properties:
        AttributeDefinitions:
          - AttributeName: Room
            AttributeType: S
          - AttributeName: Index
            AttributeType: N
        KeySchema:
          - AttributeName: Room
            KeyType: HASH
          - AttributeName: Index
            KeyType: RANGE
        BillingMode: PAY_PER_REQUEST
        TableName: ${self:provider.environment.MESSAGES_TABLE}

plugins:
  - serverless-python-requirements
